#!/usr/bin/env bash

if ! command -v curl >/dev/null; then
  echo "curl: Command not found"
  exit 1
fi

if ! command -v git >/dev/null; then
  echo "git: Command not found"
  exit 1
fi

set -e

usage() {
  echo "Usage: $(basename "$0") [-c] [-f]"
  exit 2
}

colors_flag=0
force_flag=0

while getopts :cf opt; do
  case $opt in
  c)
    colors_flag=1
    ;;
  f)
    force_flag=1
    ;;
  ?)
    usage
    ;;
  esac
done

create_directory() {
  local name=$1

  mkdir -p "$HOME/$name"
}

copy_file() {
  local from="$1"
  local to="$HOME/$2"

  if [[ ! -e "$to" ]] || [[ $force_flag -ne 0 ]]; then
    cp -f "$from" "$to"

    echo "Copy \"$to\""
  else
    echo "Skip \"$to\": File exists"
  fi
}

link_file() {
  local name=$1

  local from="$HOME/$name"
  local to="$PWD/$name"

  if [[ ! -e "$from" ]] || [[ $force_flag -ne 0 ]]; then
    ln -fns "$to" "$from"

    echo "Link \"$from\""
  else
    echo "Skip \"$from\": File exists"
  fi
}

clone_repository() {
  local from=$1
  local to=$2

  local branch="master"

  if [[ ! -e "$to" ]]; then
    git clone --quiet "$from" "$to"

    echo "Clone \"$to\""
  else
    if [[ -n "$(git -C "$to" for-each-ref "refs/remotes/origin/main")" ]]; then
      branch="main"
    fi

    git -C "$to" fetch --quiet
    git -C "$to" reset --quiet --hard "origin/$branch"

    echo "Update \"$to\""
  fi
}

create_directory "bin"

link_file "bin/git-amend"

create_directory ".config/kitty"
create_directory ".subversion"

link_file ".config/kitty/kitty.conf"
link_file ".ctags"
link_file ".gitconfig"
link_file ".gitignore"
link_file ".hushlogin"
link_file ".subversion/config"
link_file ".tmux.conf"
link_file ".vim"
link_file ".vimrc"
link_file ".zprofile"
link_file ".zshrc"

if [[ $colors_flag -ne 0 ]]; then
  copy_file ".vimrc.colors" ".vimrc.colors"
fi

pack=".vim/pack/default/start"

clone_repository "https://github.com/othree/html5.vim.git" "$pack/html5.vim"
clone_repository "https://github.com/chase/vim-ansible-yaml.git" "$pack/vim-ansible-yaml"
clone_repository "https://github.com/hail2u/vim-css3-syntax.git" "$pack/vim-css3-syntax"
clone_repository "https://github.com/tpope/vim-fugitive.git" "$pack/vim-fugitive"
clone_repository "https://github.com/jvirtanen/vim-hcl.git" "$pack/vim-hcl"
clone_repository "https://github.com/jvirtanen/vim-hocon.git" "$pack/vim-hocon"
clone_repository "https://github.com/pangloss/vim-javascript.git" "$pack/vim-javascript"
clone_repository "https://github.com/lepture/vim-jinja.git" "$pack/vim-jinja"
clone_repository "https://github.com/elzr/vim-json.git" "$pack/vim-json"
clone_repository "https://github.com/tpope/vim-liquid.git" "$pack/vim-liquid"
clone_repository "https://github.com/tpope/vim-markdown.git" "$pack/vim-markdown"
clone_repository "https://github.com/tpope/vim-sleuth.git" "$pack/vim-sleuth"
clone_repository "https://github.com/tpope/vim-vinegar.git" "$pack/vim-vinegar"

if [[ $colors_flag -ne 0 ]]; then
  clone_repository "https://github.com/jvirtanen/base16-vim.git" "$pack/base16-vim"
fi
